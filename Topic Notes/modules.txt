SECTION: 

Vue Components: 
--------------

- Reusable pieces of HTMl with their own CONNECTED DATA AND 
LOGIC/BEHAVIOUR. The functionality must be exclusive to that HTML 
block. 

- Also enable us to split large project into small reusable parts with 
each serving a purpose. 

- Component is like a CUSTOM HTML element that we can re-use. In HTML page, 
we use it like it's an element (but using its name, vue recognizes that 
it's an vue component)

- should be named with a '-' with a custom name to avoid clashing with
HTML element name.
- Component is a vue app 'CONNECTED TO THE main app'. But data is exclusive 
and can't be accessed outside itself. 

NOTE: For components, we give a template not using .mount() but 
using the template option in config object. 

const app = Vue.createApp({...}) ; 

app.component('identifier-name', {
    // config object just like app's config object. 
    template: `` , 
    
    data() {return {...}}, 

    methods: {...}, 
})

IN HTML SECTION, ONLY INSIDE our main-app template we can use the 
component like it was a normal HTML element: 
Each component will be working standalone with its own data and 
functionality. 

<identifier-name> </identifier-name>

IMPORTANT: 
We can REUSE SAME COMPONENT WITH DIFFERENT data (like Classes) and this
is what makes it powerful. 

- Encapsulated & isolated components can also be combined to form 
a big app


NOTE: 
Local Development web Server will serve your project via HTTP(S)
protocol.  


- Using VUE CLI (under the hood uses node.js) : 

- Additional tool used for better developer performance while using 
Vue. 
- Helps us create & manage bigger projects. 

Create vue app/project using command :  vue create project-name 
run the live-server using npm run serve 

vue cli installs dependencies and stores all packages in node modules 
directory. 

public directory: 
contains our index.html file which will contain vue app at the end

src folder -> contains all JS code we'll write. 
In src, 
main.js -> entry point (vue project BTS is configured such that it 
compiles and executes the main.js file FIRST)


TOPIC: VUE code and .vue files: 
---------------------------------

.vue files are called SINGLE FILE COMPONENTS. 
Code is split in three tags for DIFFERENT purposes in Single file vue
components. 
- <template></template>, <style></style>, and <script></script> tags
for specific code for that component/vue app.
HTML Code, configuration code, styles  

.vue files are SPECIAL feature of VUE CLI project feature. 

- They allow us to write vue apps/
components in a better way and also re-use them. 

- also allow us to separate HTML template of component, some styles 
and the data and functionality in separate tags. 

- VUE CLI uses build workflow (our code is not the working code.
We define features but it's transpiled to regular JS code that 
browser understands. This is build step)

VUE CLI transpiles code during build step (BUILD WORKFLOW): 
- code in .vue files ==> During build steps ==> normal JS CODE

IN ASSETS FOLDER -> add any images used in vue app. 
Components FOLDER -> contains reusable vue components. 

We combine all those components TO FORM THE VUE APP. (App.vue) 